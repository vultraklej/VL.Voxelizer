[Summary("")]
shader VoxelsTransformations_ComputeFX : ComputeShaderBase, TransformUtils, HappyNoise, Global, VoxelStruct
{
    struct Transform 
    {
        float4x4 Matrix;
    };

    float Unit;
    StructuredBuffer<float3> VoxelPositions;
    StructuredBuffer<Voxel> Voxels;

	RWStructuredBuffer<Transform> InstanceWorld;
	RWStructuredBuffer<Transform> InstanceWorldInverse;

    override void Compute()
    {
        uint index = streams.DispatchThreadId.x;

        Voxel voxel = Voxels[index];
        float3 position = voxel.Position;
        float scale = voxel.Fill ? Unit : 0.0;
        // float noiseFactor = simplex(position * 2);
        // float factor = 0.5 + 0.5 * noiseFactor;
        // float scale = length(position) > 0.0 && factor > 0.0 ? Unit : 0.0;

        float4x4 world;
        float4x4 worldInverse;

        TransformTSWithInverse(position, scale, world, worldInverse);

        InstanceWorld[index].Matrix = world;
        InstanceWorldInverse[index].Matrix = worldInverse;
    }
};